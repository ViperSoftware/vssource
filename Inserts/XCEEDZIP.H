#ifndef __XCEEDZIP_H__
#define __XCEEDZIP_H__

// Machine generated IDispatch wrapper class(es) created by Microsoft Visual C++

// NOTE: Do not modify the contents of this file.  If this class is regenerated by
//  Microsoft Visual C++, your modifications will be overwritten.


// Dispatch interfaces referenced by this interface
class CPicture;

/////////////////////////////////////////////////////////////////////////////
// CXceedZip wrapper class

class CXceedZip : public CWnd
{
protected:
	DECLARE_DYNCREATE(CXceedZip)
public:
	CLSID const& GetClsid()
	{
		static CLSID const clsid
			= { 0xb26f6246, 0x4c7d, 0x11d1, { 0x91, 0xe, 0x0, 0x60, 0x8, 0x7, 0x16, 0x3f } };
		return clsid;
	}
	virtual BOOL Create(LPCTSTR lpszClassName,
		LPCTSTR lpszWindowName, DWORD dwStyle,
		const RECT& rect,
		CWnd* pParentWnd, UINT nID,
		CCreateContext* pContext = NULL)
	{ return CreateControl(GetClsid(), lpszWindowName, dwStyle, rect, pParentWnd, nID); }

    BOOL Create(LPCTSTR lpszWindowName, DWORD dwStyle,
		const RECT& rect, CWnd* pParentWnd, UINT nID,
		CFile* pPersist = NULL, BOOL bStorage = FALSE,
		BSTR bstrLicKey = NULL)
	{ return CreateControl(GetClsid(), lpszWindowName, dwStyle, rect, pParentWnd, nID,
		pPersist, bStorage, bstrLicKey); }

// Attributes
public:
	BOOL GetAbort();
	void SetAbort(BOOL);
	short GetCompression();
	void SetCompression(short);
	BOOL GetClearDisks();
	void SetClearDisks(BOOL);
	CString GetExtractDirectory();
	void SetExtractDirectory(LPCTSTR);
	BOOL GetIncludeDirectoryEntries();
	void SetIncludeDirectoryEntries(BOOL);
	BOOL GetIncludeHiddenFiles();
	void SetIncludeHiddenFiles(BOOL);
	BOOL GetIncludeVolumeLabel();
	void SetIncludeVolumeLabel(BOOL);
	CString GetModifiedDate();
	void SetModifiedDate(LPCTSTR);
	BOOL GetMoveFiles();
	void SetMoveFiles(BOOL);
	BOOL GetMultidiskMode();
	void SetMultidiskMode(BOOL);
	short GetOverwrite();
	void SetOverwrite(short);
	CString GetPassword();
	void SetPassword(LPCTSTR);
	BOOL GetRecurse();
	void SetRecurse(BOOL);
	CString GetStoredExtensions();
	void SetStoredExtensions(LPCTSTR);
	CString GetTempPath();
	void SetTempPath(LPCTSTR);
	BOOL GetUsePaths();
	void SetUsePaths(BOOL);
	BOOL GetUseTempFile();
	void SetUseTempFile(BOOL);
	CString GetZipFileName();
	void SetZipFileName(LPCTSTR);
	short GetFileCount();
	void SetFileCount(short);
	CString GetZipComment();
	void SetZipComment(LPCTSTR);
	CString GetFilesToProcess();
	void SetFilesToProcess(LPCTSTR);
	BOOL GetSelfExtracting();
	void SetSelfExtracting(BOOL);
	CString GetSfxBinary();
	void SetSfxBinary(LPCTSTR);
	CString GetSfxConfigFile();
	void SetSfxConfigFile(LPCTSTR);
	CString GetSfxExtractDirectory();
	void SetSfxExtractDirectory(LPCTSTR);
	CString GetSfxRunExePath();
	void SetSfxRunExePath(LPCTSTR);
	CString GetSfxReadmePath();
	void SetSfxReadmePath(LPCTSTR);
	CString GetSfxDefaultPassword();
	void SetSfxDefaultPassword(LPCTSTR);
	short GetSfxOverwrite();
	void SetSfxOverwrite(short);
	BOOL GetSfxPromptForDirectory();
	void SetSfxPromptForDirectory(BOOL);
	BOOL GetSfxShowProgress();
	void SetSfxShowProgress(BOOL);
	BOOL GetSfxPromptForPassword();
	void SetSfxPromptForPassword(BOOL);
	BOOL GetSfxPromptCreateDirectory();
	void SetSfxPromptCreateDirectory(BOOL);
	CString GetSfxProgramGroup();
	void SetSfxProgramGroup(LPCTSTR);
	CString GetSfxProgramGroupItems();
	void SetSfxProgramGroupItems(LPCTSTR);
	CString GetSfxRegisterExtensions();
	void SetSfxRegisterExtensions(LPCTSTR);
	CPicture GetSfxIcon();
	void SetSfxIcon(LPDISPATCH);
	BOOL GetSfxInstallMode();
	void SetSfxInstallMode(BOOL);
	CString GetInternalState();
	void SetInternalState(LPCTSTR);

// Operations
public:
	CString GetSfxPrompts(short SfxPromptID);
	void SetSfxPrompts(short SfxPromptID, LPCTSTR lpszNewValue);
	CString GetSfxStrings(short SfxStringID);
	void SetSfxStrings(short SfxStringID, LPCTSTR lpszNewValue);
	CString GetSfxButtons(short SfxButtonID);
	void SetSfxButtons(short SfxButtonID, LPCTSTR lpszNewValue);
	CString GetSfxMessages(short SfxMessageID);
	void SetSfxMessages(short SfxMessageID, LPCTSTR lpszNewValue);
	BOOL GetSfxShowMessages(short SfxMessageID);
	void SetSfxShowMessages(short SfxMessageID, BOOL bNewValue);
	short Test();
	short Fix(BOOL Aggressive);
	short Add(short Cmd);
	short Extract(short Cmd);
	short List();
	short UpdateZipDate();
	short Delete();
	short GetFileInfo(short Index);
	short StringCompress(BSTR* Source, BSTR* Target);
	short StringUncompress(BSTR* Source, BSTR* Target);
	long MemCompress(long* SourceBuf, long SourceSize, long* TargetBuf, long TargetSize);
	long MemUncompress(long* SourceBuf, long SourceSize, long* TargetBuf);
	long MemOriginalSize(long* SourceBuf);
	short MakeSelfExtracting();
	void SfxResetDefaultStrings();
	void AboutBox();
};

#endif // __XCEEDZIP_H__
